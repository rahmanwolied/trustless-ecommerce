model Nid {
  id String @id @default(cuid())

  nidNumber String @unique @default(dbgenerated("floor(random() * 9000000000 + 1000000000)::text")) @db.Char(10)

  firstName   String
  lastName    String
  dateOfBirth DateTime
  gender      String
  address     String
  phoneNumber String   @unique @db.Char(11)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  otp              String?   @db.Char(6)
  otpExpiry        DateTime?
  otpSentAt        DateTime?
  otpVerifiedAt    DateTime?
  otpVerifiedCount Int       @default(0)

  @@index([nidNumber])
}

model Product {
  id String @id @default(cuid())

  name      String
  price     Float
  rating    Float
  purchases Int
  image     String

  sellerId String
  seller   Seller @relation(fields: [sellerId], references: [id])
}

model Purchase {
  id String @id @default(cuid())

  buyerFirstName String
  amount         Float
  tTime          DateTime @default(now())
  star           Int
  status         Status   @default(COMPLETED)
  picture        String
  video          String
  review         String

  sellerId String
  seller   Seller @relation(fields: [sellerId], references: [id])
}

enum Status {
  PENDING
  COMPLETED
  CANCELLED
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../../generated/client"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Seller {
  id String @id @default(cuid())

  trustFactor Float

  name    String @unique
  address String
  phone   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  purchases Purchase[]
  products  Product[]
}
